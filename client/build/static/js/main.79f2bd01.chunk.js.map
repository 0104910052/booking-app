{"version":3,"sources":["assets/images/icon-google.svg","components/auth/auth.module.scss","assets/images/logo.svg","assets/images/logo-solo.svg","components/dashboard/dashboard.module.scss","components/routing/nav.module.scss","components/auth/auth-header.tsx","store/authSlice.ts","components/auth/login/login.tsx","../../common/utils/isEmpty.ts","../../common/validators/account-validator.ts","hooks/use-mail-validators.tsx","components/auth/register/register-email.tsx","components/auth/register/register-info.tsx","components/auth/register/register.tsx","components/routing/nav/nav-profile.tsx","../../common/utils/boole.ts","hooks/use-is-mobile.tsx","components/routing/nav/nav-header.tsx","hooks/use-is-in-auth.tsx","components/routing/nav/nav-sider.tsx","components/dashboard/dashboard.tsx","components/routing/app-router.tsx","hooks/use-is-online.tsx","App.tsx","store/store.ts","index.tsx"],"names":["module","exports","AuthHeader","props","history","useHistory","span","className","src","logo","style","authLogo","alt","xs","md","authRedirect","onClick","push","targetLocation","ghost","slice","createSlice","name","initialState","isLoggedIn","user","profileUrl","reducers","login","state","action","payload","logout","setUser","actions","selectAuth","Login","useForm","form","dispatch","useDispatch","responseGoogle","response","console","log","onMailChange","container","authForm","offset","xl","xxl","headingTitle","slideContainer","onFinish","Item","hasFeedback","onChange","placeholder","Password","htmlType","block","inputButton","type","clientId","render","renderProps","id","buttonIcon","googleIcon","buttonText","onSuccess","onFailure","cookiePolicy","isEmpty","t","undefined","isMailValid","mail","isValid","errorMessage","formValidationStatus","validator","isEmail","isFullNameValid","test","isPasswordValid","password","isAccountValid","account","fullName","useMailValidator","useState","mailValidation","setMailValidation","setEmail","IS_MAIL_REGISTERED","gql","useEffect","validate","useQuery","fetchPolicy","skip","onCompleted","d","queryResolved","isUserRegistered","validationResponse","RegisterEmail","swapView","setMail","googleButtonRef","useRef","blockTabOnGoogleButton","e","key","document","activeElement","preventDefault","window","addEventListener","r","getFieldValue","validateStatus","help","disabled","ref","RegisterInfo","initView","recaptchaRef","React","createRef","fullNameRef","setFullName","setPassword","setTimeout","current","focus","setFieldsValue","isFieldTouched","extra","settings","height","alwaysVisible","colorScheme","levels","noLevel","size","sitekey","Register","setInitView","sliderRef","CSSTransition","appear","timeout","in","classNames","scrollTo","scrollWidth","NavProfile","auth","useSelector","navProfile","profileImage","profileWrapper","navUserImage","svgImage","verticalAnchor","y","x","fontSize","getImageDiv","anyBool","pred","bool","i","length","or","getIsMobile","responsiveInfo","lg","sx","sm","useIsMobile","breakpoints","useResponsive","isMobile","setIsMobile","NavHeader","Header","navbar","navLogo","navLogoImg","display","nav","theme","mode","defaultSelectedKeys","useIsInAuth","isInAuth","setIsInAuth","location","useLocation","urlPathSplit","pathname","split","NavSider","isCollapsed","setIsCollapsed","Sider","Content","collapsedWidth","collapsible","collapsed","UserOutlined","VideoCameraOutlined","UploadOutlined","Dashboard","dashboard","AppRouter","path","exact","useOnlineStatus","navigator","onLine","onlineStatus","setOnlineStatus","goOnline","goOffline","removeEventListener","App","isOnline","Fragment","configureStore","reducer","authReducer","client","ApolloClient","uri","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.79f2bd01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-google.81ad048e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light-sky-blue\":\"auth_light-sky-blue__2cLt7\",\"line-height\":\"auth_line-height__17iN3\",\"mt-6\":\"auth_mt-6__39U6e\",\"mb-5\":\"auth_mb-5__fazmt\",\"display-1\":\"auth_display-1__15ocq\",\"display-2\":\"auth_display-2__rdLg2\",\"display-3\":\"auth_display-3__2Dpk-\",\"display-4\":\"auth_display-4__3jrIK\",\"mr-auto\":\"auth_mr-auto__ceRQT\",\"d-inline\":\"auth_d-inline__1lhwe\",\"position-absolute\":\"auth_position-absolute__Ve_25\",\"display-none\":\"auth_display-none__3_nup\",\"text-link\":\"auth_text-link__1Ou-h\",\"bgTest\":\"auth_bgTest__1lSnw\",\"borderTest\":\"auth_borderTest__3ej-1\",\"text-info\":\"auth_text-info__3HMUB\",\"p-6\":\"auth_p-6__crou1\",\"text-smaller\":\"auth_text-smaller__2iYy3\",\"small-text\":\"auth_small-text__1N_0-\",\"position-relative\":\"auth_position-relative__37QNr\",\"container\":\"auth_container__2C2La\",\"authLogo\":\"auth_authLogo__3_vB5\",\"authRedirect\":\"auth_authRedirect__3QRId\",\"authForm\":\"auth_authForm__32rwV\",\"authInput\":\"auth_authInput__18g-2\",\"inputButton\":\"auth_inputButton__3TgJm\",\"headingTitle\":\"auth_headingTitle__28Jfd\",\"slideContainer\":\"auth_slideContainer__2R3n1\",\"buttonIcon\":\"auth_buttonIcon__33mVs\"};","module.exports = __webpack_public_path__ + \"static/media/logo.646c54b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-solo.f6f6bf35.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__3fUKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"nav_navbar__2T_OY\",\"nav\":\"nav_nav__311kN\",\"navLogo\":\"nav_navLogo__OEzaE\",\"navLogoImg\":\"nav_navLogoImg__3Ve3K\",\"navProfile\":\"nav_navProfile__5Xbj6\",\"profileImage\":\"nav_profileImage__1pxh4\",\"navUserImage\":\"nav_navUserImage__1zNdz\",\"svgImage\":\"nav_svgImage__2TB7n\",\"profileWrapper\":\"nav_profileWrapper__2vcMk\"};","import React from 'react';\r\nimport { Button, Col, Row } from 'antd';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport style from './auth.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface AuthHeaderProps {\r\n  targetLocation: 'register' | 'login';\r\n}\r\n\r\nconst AuthHeader: React.FC<AuthHeaderProps> = props => {\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={24} className={'mt-4'}>\r\n        <img src={logo} className={style.authLogo} alt=\"\" />\r\n        <Col xs={{ span: 0 }} md={{ span: 24 }} className={style.authRedirect}>\r\n          <Button onClick={() => history.push('/auth/' + props.targetLocation)} ghost>\r\n            {props.targetLocation === 'register' ? 'Εγγραφή' : 'Είσοδος'}\r\n          </Button>\r\n        </Col>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AuthHeader;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ninterface AuthState {\r\n    isLoggedIn: boolean,\r\n    user: {}\r\n}\r\n\r\n\r\nexport const slice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        isLoggedIn: true,\r\n        user: {\r\n            profileUrl: 'https://lh3.googleusercontent.com/a-/AOh14GiwM_y4MyoxBsEApgd9Qf2__s3mEL74mgbFERZA=s96-c'\r\n        }\r\n    },\r\n    reducers: {\r\n        login: (state, action) => {\r\n            state.isLoggedIn = true\r\n            action.payload.history.push('/')\r\n        },\r\n        logout: state => {\r\n            state.isLoggedIn = false;\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { login, logout, setUser } = slice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectAuth = (state:any) => state;\r\n\r\nexport default slice.reducer;\r\n","import React from 'react';\r\nimport style from '../auth.module.scss';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Row, Col, Input, Form, Button } from 'antd';\r\nimport GoogleLogin from 'react-google-login';\r\nimport googleIcon from '../../../assets/images/icon-google.svg';\r\nimport { useForm } from 'antd/es/form/util';\r\nimport AuthHeader from '../auth-header';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../../store/authSlice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [form] = useForm();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const finished = () => {};\r\n  const responseGoogle = (response: any) => {\r\n    console.log(response);\r\n  };\r\n  const onMailChange = () => {};\r\n\r\n  return (\r\n    <Row className={style.container}>\r\n      <Col span={24} className={'text-center'}>\r\n        <AuthHeader targetLocation={'register'} />\r\n        <Row>\r\n          <Col\r\n            className={style.authForm}\r\n            xs={{ span: 20, offset: 2 }}\r\n            md={{ span: 8, offset: 8 }}\r\n            xl={{ span: 6, offset: 9 }}\r\n            xxl={{ span: 4, offset: 10 }}\r\n          >\r\n            <Row className=\"text-center\">\r\n              <Col span={24}>\r\n                <h1 className={` ${style.headingTitle}`}>Είσοδος λογαριασμού </h1>\r\n              </Col>\r\n            </Row>\r\n            <div className={style.slideContainer}>\r\n              <Col span={24} className={'mr-1 mt-4 text-left'}>\r\n                <Form form={form} onFinish={finished}>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form.Item name=\"mail\" hasFeedback>\r\n                        <Input onChange={onMailChange} placeholder=\"Λογαριασμός email\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Form.Item name=\"mail\" hasFeedback>\r\n                        <Input.Password onChange={onMailChange} placeholder=\"Κώδικος\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row className=\"mt-5\">\r\n                    <Button htmlType={'submit'} block className={`${style.inputButton} auth-disabled`} type={'primary'}>\r\n                      Σύνεχεια\r\n                    </Button>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24} className={'text-center'}>\r\n                      Ή\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <GoogleLogin\r\n                      clientId=\"315458143733-80m56pstigk1t5q22i3fdrpa0jbvd570.apps.googleusercontent.com\"\r\n                      render={renderProps => (\r\n                        <Button\r\n                          id={'registerEmailGButton'}\r\n                          block\r\n                          className={style.inputButton}\r\n                          onClick={renderProps.onClick}\r\n                        >\r\n                          <img className={style.buttonIcon} src={googleIcon} alt=\"\" />\r\n                          <span className=\"ml-1\">Σύνεχεια με Google</span>\r\n                        </Button>\r\n                      )}\r\n                      buttonText=\"Login\"\r\n                      onSuccess={responseGoogle}\r\n                      onFailure={responseGoogle}\r\n                      cookiePolicy={'single_host_origin'}\r\n                    />\r\n                  </Row>\r\n                  <Row className={'mt-5 text-smaller text-center'}>\r\n                    <Col span={24}>\r\n                      <button\r\n                        onClick={() => {\r\n                          dispatch(login({ history }));\r\n                        }}\r\n                      >\r\n                        Lowkey login\r\n                      </button>\r\n                      <hr />\r\n                      <div className=\"mt-2\">\r\n                        Δέν έχετε λογαριασμό; <span className={'light-sky-blue'}>Εγγραφείτε</span>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export function isEmpty(t: any) {\r\n  if (t === \"\" || t === null || t === undefined || typeof t === \"undefined\") {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { isEmpty } from '../utils/isEmpty';\r\nimport { User } from '../types/entity/user';\r\nimport { ValidationResponse } from '../types/misc/validation-response';\r\nimport validator from 'validator';\r\n// const zxcvbn = require('zxcvbn');\r\n\r\nexport interface RegistrationAccount {\r\n  mail: string;\r\n  password: string;\r\n  fullName: string;\r\n}\r\n\r\nexport const isMailValid = (mail: string): ValidationResponse => {\r\n  if (isEmpty(mail)) {\r\n    return {\r\n      isValid: false,\r\n      errorMessage: 'Η διευθυνσή email δεν μπορεί να είναι κενη',\r\n      formValidationStatus: 'warning'\r\n    };\r\n  }\r\n\r\n  if (!validator.isEmail(mail)) {\r\n    return {\r\n      isValid: false,\r\n      errorMessage: 'Η διευθυνσή email δεν εχεί σωστη μορφή',\r\n      formValidationStatus: 'warning'\r\n    };\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    formValidationStatus: 'success'\r\n  };\r\n};\r\n\r\nexport const isFullNameValid = (name: string): ValidationResponse => {\r\n  if (isEmpty(name)) {\r\n    return {\r\n      isValid: false,\r\n      errorMessage: 'Το πληρες ονομα δεν μπορει να ειναι κενο ',\r\n      formValidationStatus: 'warning'\r\n    };\r\n  }\r\n\r\n  if (!/[^%]{3,}/g.test(name)) {\r\n    return {\r\n      isValid: false,\r\n      errorMessage: 'Το πληρες ονομα δεν ειναι σωστο',\r\n      formValidationStatus: 'warning'\r\n    };\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    formValidationStatus: 'success'\r\n  };\r\n};\r\n\r\nexport const isPasswordValid = (password: string): ValidationResponse => {\r\n  if (isEmpty(password)) {\r\n    return {\r\n      isValid: false,\r\n      formValidationStatus: 'warning',\r\n      errorMessage: 'Ο κώδικος δεν μπορει να ειναι κενος'\r\n    };\r\n  }\r\n\r\n  // if (zxcvbn(password).score < 2) {\r\n  if (true) {\r\n    return {\r\n      isValid: false,\r\n      formValidationStatus: 'warning',\r\n      errorMessage: 'Ο κώδικος δεν ειναι αρκετα δυνατος'\r\n    };\r\n  }\r\n\r\n  return {\r\n    isValid: true,\r\n    formValidationStatus: 'success'\r\n  };\r\n};\r\n\r\nexport const isAccountValid = (account: RegistrationAccount): boolean => {\r\n  const { mail, password, fullName } = account;\r\n\r\n  if (isMailValid(mail).isValid && isPasswordValid(password).isValid && isFullNameValid(fullName).isValid) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { isMailValid } from '../../../common/validators/account-validator';\r\nimport { ValidationResponse } from '../../../common/types/misc/validation-response';\r\n\r\nexport const useMailValidator = () => {\r\n  const [mailValidation, setMailValidation] = useState<ValidationResponse>({\r\n    isValid: false\r\n  });\r\n  const [mail, setEmail] = useState('');\r\n\r\n  interface TData {\r\n    isUserRegistered: boolean;\r\n  }\r\n\r\n  const IS_MAIL_REGISTERED = gql`\r\n        {\r\n          isUserRegistered(email: \"${mail}\")\r\n        }\r\n    `;\r\n\r\n  useEffect(() => {\r\n    if (mail !== '') {\r\n      validate();\r\n    }\r\n  }, [mail]);\r\n\r\n  useQuery(IS_MAIL_REGISTERED, {\r\n    fetchPolicy: 'no-cache',\r\n    skip: !isMailValid(mail).isValid,\r\n    onCompleted: d => {\r\n      console.log(d);\r\n      queryResolved(d);\r\n    }\r\n  });\r\n\r\n  const queryResolved = (d: TData) => {\r\n    if (d.isUserRegistered) {\r\n      setMailValidation({\r\n        isValid: false,\r\n        errorMessage: 'Το email υπαρχει ηδη',\r\n        formValidationStatus: 'warning'\r\n      });\r\n    } else {\r\n      setMailValidation({\r\n        isValid: true,\r\n        errorMessage: '',\r\n        formValidationStatus: 'success'\r\n      });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    console.log('validating');\r\n    const validationResponse = isMailValid(mail);\r\n    setMailValidation(validationResponse);\r\n  };\r\n\r\n  return [mailValidation, setEmail] as const;\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport '../../../styles/global.scss';\r\nimport style from '../auth.module.scss';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport googleIcon from '../../../assets/images/icon-google.svg';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport { isMailValid } from '../../../../../common/validators/account-validator';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useMailValidator } from '../../../hooks/use-mail-validators';\r\n\r\ninterface RegisterEmailProps {\r\n  swapView(): any;\r\n  setMail(email: string): any;\r\n}\r\n\r\nexport const RegisterEmail: React.FC<RegisterEmailProps> = ({ swapView, setMail }: RegisterEmailProps) => {\r\n  const [form] = Form.useForm();\r\n  const [validationResponse, setEmail] = useMailValidator();\r\n  const googleButtonRef: any = useRef();\r\n\r\n  const blockTabOnGoogleButton = (e: any) => {\r\n    if (e.key === 'Tab') {\r\n      if ((document.activeElement as any).id === 'registerEmailGButton') {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', blockTabOnGoogleButton);\r\n  }, []);\r\n\r\n  const finished = () => {\r\n    setMail(form.getFieldValue('mail'));\r\n    swapView();\r\n  };\r\n\r\n  const onMailChange = () => {\r\n    setEmail(form.getFieldValue('mail'));\r\n  };\r\n\r\n  const responseGoogle = (r: any) => {};\r\n\r\n  return (\r\n    <Col span={24} className={'mr-1 mt-4 text-left'}>\r\n      <Form form={form} onFinish={finished}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"mail\"\r\n              hasFeedback\r\n              validateStatus={validationResponse.formValidationStatus}\r\n              help={validationResponse.errorMessage}\r\n            >\r\n              <Input onChange={onMailChange} placeholder=\"Λογαριασμός email\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row className={'pb-5'}>\r\n          <p className=\"small-text\">\r\n            Με την εγγραφή σας, επιβεβαιονετε οτι έχετε διαβάσει και αποδέχεσθαι τους{' '}\r\n            <span className=\"light-sky-blue\">Όρους</span> και την{' '}\r\n            <span className=\"light-sky-blue\">Πολιτική Αποριτού</span>.\r\n          </p>\r\n        </Row>\r\n        <Row className=\"mt-5\">\r\n          <Button\r\n            htmlType={'submit'}\r\n            block\r\n            className={`${style.inputButton} auth-disabled`}\r\n            disabled={!validationResponse.isValid}\r\n            type={'primary'}\r\n          >\r\n            Σύνεχεια\r\n          </Button>\r\n        </Row>\r\n        <Row>\r\n          <Col span={24} className={'text-center'}>\r\n            Ή\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <GoogleLogin\r\n            clientId=\"315458143733-80m56pstigk1t5q22i3fdrpa0jbvd570.apps.googleusercontent.com\"\r\n            render={renderProps => (\r\n              <Button\r\n                id={'registerEmailGButton'}\r\n                ref={googleButtonRef}\r\n                block\r\n                className={style.inputButton}\r\n                onClick={renderProps.onClick}\r\n              >\r\n                <img className={style.buttonIcon} src={googleIcon} alt=\"\" />\r\n                <span className=\"ml-1\">Σύνεχεια με Google</span>\r\n              </Button>\r\n            )}\r\n            buttonText=\"Login\"\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy={'single_host_origin'}\r\n          />\r\n        </Row>\r\n        <Row className={'mt-5 text-smaller text-center'}>\r\n          <Col span={24}>\r\n            <hr />\r\n            <div className=\"mt-2\">\r\n              Έχετε ηδη λογαριασμό; <span className={'light-sky-blue'}>Σύνδεθειτέ</span>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default RegisterEmail;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport style from '../auth.module.scss';\r\nimport { Form, Input, Button, Row, Col } from 'antd';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport googleIcon from '../../../assets/images/icon-google.svg';\r\nimport { PasswordInput } from 'antd-password-input-strength';\r\nimport {\r\n  isFullNameValid,\r\n  isPasswordValid,\r\n  isAccountValid,\r\n  isMailValid\r\n} from '../../../../../common/validators/account-validator';\r\nimport ReCAPTCHA from 'react-google-recaptcha';\r\nimport { isEmpty } from '../../../../../common/utils/isEmpty';\r\nimport { useMailValidator } from '../../../hooks/use-mail-validators';\r\n\r\ninterface RegisterInfoProps {\r\n  mail: string;\r\n  initView: boolean;\r\n}\r\n\r\nconst RegisterInfo: React.FC<RegisterInfoProps> = ({ mail, initView }: RegisterInfoProps) => {\r\n  const recaptchaRef: any = React.createRef<ReCAPTCHA>();\r\n  const [form] = Form.useForm();\r\n  const fullNameRef: any = useRef();\r\n\r\n  const finished = () => {};\r\n\r\n  const [validationResponse, setEmail] = useMailValidator();\r\n  const [fullName, setFullName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    console.log('---');\r\n    if (initView) {\r\n      setTimeout(() => {\r\n        if (!isEmpty(mail)) {\r\n          fullNameRef.current.focus();\r\n        }\r\n      }, 150);\r\n      form.setFieldsValue({ mail });\r\n    }\r\n  }, [mail]);\r\n\r\n  const onMailChange = () => {\r\n    setEmail(form.getFieldValue('mail'));\r\n  };\r\n\r\n  const onPasswordChange = () => {\r\n    setPassword(form.getFieldValue('password'));\r\n  };\r\n\r\n  const onFullNameChange = () => {\r\n    setFullName(form.getFieldValue('fullName'));\r\n  };\r\n\r\n  return (\r\n    <Col span={24} className={'text-left p-1 mt-4'}>\r\n      <Form form={form} onFinish={finished}>\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"mail\"\r\n              hasFeedback\r\n              validateStatus={form.isFieldTouched('mail') ? validationResponse.formValidationStatus : ''}\r\n              extra={form.isFieldTouched('mail') ? validationResponse.errorMessage : ''}\r\n            >\r\n              <Input onChange={onMailChange} placeholder=\"Λογαριασμός email\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form.Item\r\n              name=\"fullName\"\r\n              hasFeedback\r\n              validateStatus={\r\n                form.isFieldTouched('fullName')\r\n                  ? isFullNameValid(form.getFieldValue('fullName')).formValidationStatus\r\n                  : ''\r\n              }\r\n              extra={\r\n                form.isFieldTouched('fullName') ? isFullNameValid(form.getFieldValue('fullName')).errorMessage : ''\r\n              }\r\n            >\r\n              <Input ref={fullNameRef} onChange={onFullNameChange} placeholder=\"Πλήρες όνομα\" />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col span={24}>\r\n            <span>Κωδικος:</span>\r\n            <Form.Item\r\n              className={'auth-password-input'}\r\n              name={'password'}\r\n              hasFeedback\r\n              validateStatus={\r\n                form.isFieldTouched('password')\r\n                  ? isPasswordValid(form.getFieldValue('password')).formValidationStatus\r\n                  : ''\r\n              }\r\n              extra={\r\n                form.isFieldTouched('password') ? isPasswordValid(form.getFieldValue('password')).errorMessage : ''\r\n              }\r\n            >\r\n              <PasswordInput\r\n                onChange={onPasswordChange}\r\n                settings={{\r\n                  height: 4,\r\n                  alwaysVisible: true,\r\n                  colorScheme: {\r\n                    levels: ['#ff4033', '#fe7439', '#59eb29', '#5df32b', '#67ff2f'],\r\n                    noLevel: 'lightgrey'\r\n                  }\r\n                }}\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"mt-5\">\r\n          <Button\r\n            htmlType={'submit'}\r\n            block\r\n            className={`${style.inputButton} auth-disabled`}\r\n            disabled={\r\n              !isAccountValid({\r\n                mail: form.getFieldValue('mail'),\r\n                password: form.getFieldValue('password'),\r\n                fullName: form.getFieldValue('fullName')\r\n              })\r\n            }\r\n            type={'primary'}\r\n          >\r\n            Σύνεχεια\r\n          </Button>\r\n        </Row>\r\n\r\n        <Row className={'text-center'}>\r\n          <Col span={24}>Ή</Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Button block className={style.inputButton}>\r\n            <img className={style.buttonIcon} src={googleIcon} alt=\"\" />\r\n            <span className=\"ml-1\">Σύνεχεια με Google</span>\r\n          </Button>\r\n        </Row>\r\n\r\n        <Row className={'mt-4 text-smaller text-center'}>\r\n          <Col span={24}>\r\n            <hr />\r\n            <div className=\"mt-2\">\r\n              Έχετε ηδη λογαριασμό; <span className={'light-sky-blue'}>Σύνδεθειτέ</span>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ReCAPTCHA ref={recaptchaRef} size=\"invisible\" sitekey=\"6LfulNMUAAAAAEBEZb336ALlHtTRRO5a85Trf9n_\" />\r\n      </Form>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default RegisterInfo;\r\n","import React, { useState, useRef } from 'react';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Col, Row } from 'antd';\r\nimport RegisterEmail from './register-email';\r\nimport '../../../styles/global.scss';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport RegisterInfo from './register-info';\r\nimport './register-transitions.scss';\r\nimport logo from '../../../assets/images/logo.svg';\r\nimport style from '../auth.module.scss';\r\nimport '../auth.scss';\r\nimport AuthHeader from '../auth-header';\r\n\r\nconst Register = () => {\r\n  const [initView, setInitView] = useState(true);\r\n  const sliderRef: any = useRef<HTMLDivElement | null>(null);\r\n  const scroll = (view: boolean) =>\r\n    view ? sliderRef.current.scrollTo(sliderRef.current.scrollWidth, 0) : sliderRef.current.scrollTo(0, 0);\r\n\r\n  const [mail, setMail] = useState('');\r\n\r\n  const swapView = () => {\r\n    setInitView(!initView);\r\n    setTimeout(() => scroll(initView), 200);\r\n  };\r\n\r\n  return (\r\n    <Row className={style.container}>\r\n      <Col span={24} className={'text-center'}>\r\n        <AuthHeader targetLocation={'login'} />\r\n        <Row>\r\n          <Col\r\n            className={style.authForm}\r\n            xs={{ span: 20, offset: 2 }}\r\n            md={{ span: 8, offset: 8 }}\r\n            xl={{ span: 6, offset: 9 }}\r\n            xxl={{ span: 4, offset: 10 }}\r\n          >\r\n            <Row className=\"text-center\">\r\n              <Col span={24}>\r\n                <h1 className={style.headingTitle}>Δημιουρήστε έναν λογαριασμό </h1>\r\n              </Col>\r\n            </Row>\r\n            <div className={style.slideContainer} ref={sliderRef}>\r\n              <CSSTransition appear timeout={600} in={initView} classNames=\"swapViews\">\r\n                <RegisterEmail swapView={swapView} setMail={setMail} />\r\n              </CSSTransition>\r\n              <CSSTransition timeout={900} in={!initView} classNames={'swapViews'}>\r\n                <RegisterInfo initView={initView} mail={mail} />\r\n              </CSSTransition>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport style from '../nav.module.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuth } from '../../../store/authSlice';\r\nimport Text from 'react-svg-text';\r\n\r\nconst getImageDiv = (auth: any) => {\r\n  if (auth.user.profileUrl) {\r\n    return (\r\n      <div className={style.profileWrapper}>\r\n        <img className={style.navUserImage} src={auth.user.profileUrl} alt=\"profileImage\" />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={style.profileWrapper}>\r\n        <svg className={style.svgImage}>\r\n          <Text verticalAnchor=\"start\" y={4} x={0} fontSize={'1.5rem'}>\r\n            YL\r\n          </Text>\r\n        </svg>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst NavProfile = () => {\r\n  const { auth } = useSelector(selectAuth);\r\n\r\n  return (\r\n    <div className={style.navProfile}>\r\n      <div className={style.profileImage}>{getImageDiv(auth)}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavProfile;\r\n","function id(x) {\r\n  return x;\r\n}\r\n\r\nexport const anyBool = (pred, bool, xs) => {\r\n  for (var i = 0; i < xs.length; i++) {\r\n    if (pred(xs[i]) === bool) {\r\n      return bool;\r\n    }\r\n  }\r\n  return !bool;\r\n};\r\n\r\nexport const or = xs => {\r\n  return anyBool(id, true, xs);\r\n};\r\n\r\nexport const nor = xs => {\r\n  return !or(xs);\r\n};\r\n\r\nexport const and = xs => {\r\n  return anyBool(id, false, xs);\r\n};\r\n\r\nexport const nand = xs => {\r\n  return !and(xs);\r\n};\r\n\r\nexport const xor = xs => {\r\n  return or(xs) && nand(xs);\r\n};\r\n\r\nexport const iff = xs => {\r\n  return !xor(xs);\r\n};\r\n\r\nexport const any = (pred, xs) => {\r\n  return anyBool(pred, true, xs);\r\n};\r\n\r\nexport const all = (pred, xs) => {\r\n  return anyBool(pred, false, xs);\r\n};\r\n\r\nexport const none = (pred, xs) => {\r\n  return !any(pred, xs);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useResponsive } from '@umijs/hooks';\r\nimport { nor } from '../../../common/utils/boole';\r\n\r\ninterface ResponsiveInfo {\r\n  [key: string]: boolean;\r\n}\r\n\r\nconst getIsMobile = (responsiveInfo: ResponsiveInfo): boolean => {\r\n  return nor([\r\n    responsiveInfo.md || responsiveInfo.lg || responsiveInfo.xl,\r\n    (responsiveInfo.sx || responsiveInfo.sm) && !(responsiveInfo.md || responsiveInfo.lg || responsiveInfo.xl)\r\n  ]);\r\n};\r\n\r\nconst useIsMobile = () => {\r\n  const breakpoints = useResponsive();\r\n  const [isMobile, setIsMobile] = useState(getIsMobile(breakpoints));\r\n\r\n  useEffect(() => {\r\n    setIsMobile(getIsMobile(breakpoints));\r\n  }, [breakpoints]);\r\n\r\n  return isMobile;\r\n};\r\n\r\nexport default useIsMobile;\r\n","import React from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport style from '../nav.module.scss';\r\nimport NavProfile from './nav-profile';\r\nimport '../nav.scss';\r\nimport logo from '../../../assets/images/logo-solo.svg';\r\nimport useIsMobile from '../../../hooks/use-is-mobile';\r\n\r\nconst NavHeader = () => {\r\n  const { Header } = Layout;\r\n  const isMobile = useIsMobile();\r\n\r\n  return (\r\n    <Header className={style.navbar}>\r\n      <div className={style.navLogo}>\r\n        <img className={style.navLogoImg} src={logo} alt=\"\" />\r\n      </div>\r\n      <Menu\r\n        style={{ display: isMobile ? 'none' : 'flex' }}\r\n        className={style.nav}\r\n        theme=\"dark\"\r\n        mode=\"horizontal\"\r\n        defaultSelectedKeys={['2']}\r\n      >\r\n        <Menu.Item className=\"nav-menu-item\" key=\"1\">\r\n          ΠΙΝΑΚΑΣ\r\n        </Menu.Item>\r\n        <Menu.Item className=\"nav-menu-item\" key=\"2\">\r\n          ITEM 2\r\n        </Menu.Item>\r\n        <Menu.Item className=\"nav-menu-item\" key=\"3\">\r\n          ITEM 3\r\n        </Menu.Item>\r\n      </Menu>\r\n      <NavProfile />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default NavHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { isEmpty } from '../../../common/utils/isEmpty';\r\n\r\nconst useIsInAuth = () => {\r\n  const [isInAuth, setIsInAuth] = useState(false);\r\n\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    let urlPathSplit = location.pathname.split('/');\r\n    setIsInAuth(false);\r\n    if (!isEmpty(urlPathSplit[1])) {\r\n      if (urlPathSplit[1] === 'auth') {\r\n        console.log(urlPathSplit[1]);\r\n        setIsInAuth(true);\r\n      } else {\r\n        setIsInAuth(false);\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  return [isInAuth, useIsInAuth];\r\n};\r\n\r\nexport default useIsInAuth;\r\n","import React, { useState } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport useIsInAuth from '../../../hooks/use-is-in-auth';\r\nimport { UploadOutlined, UserOutlined, VideoCameraOutlined } from '@ant-design/icons';\r\nimport { inspect } from 'util';\r\nimport styles from '../nav.module.scss';\r\n\r\nconst NavSider = () => {\r\n  const [isInAuth] = useIsInAuth();\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const { Header, Sider, Content } = Layout;\r\n\r\n  return (\r\n    <Sider collapsedWidth={60} collapsible collapsed={isCollapsed} theme={'light'}>\r\n      <Menu mode=\"inline\" defaultSelectedKeys={['1']}>\r\n        <Menu.Item\r\n          className={`nav-sider-item`}\r\n          key=\"1\"\r\n          onClick={() => {\r\n            setIsCollapsed(!isCollapsed);\r\n          }}\r\n        >\r\n          <UserOutlined />\r\n          <span>Προσωπικο</span>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" className={`nav-sider-item`}>\r\n          <VideoCameraOutlined />\r\n          <span>Άρχεια</span>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" className={`nav-sider-item`}>\r\n          <UploadOutlined />\r\n          <span>Στάτιστικα</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default NavSider;\r\n","import React from 'react';\r\nimport style from './dashboard.module.scss';\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <div className={style.dashboard}>\r\n      dash\r\n      <div>dashhh</div>\r\n      <div>dashhh</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\r\nimport Login from '../auth/login/login';\r\nimport Register from '../auth/register/register';\r\nimport './nav.module.scss';\r\nimport { Layout, Menu } from 'antd';\r\n\r\nimport NavHeader from './nav/nav-header';\r\nimport NavSider from './nav/nav-sider';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectAuth } from '../../store/authSlice';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport useIsInAuth from '../../hooks/use-is-in-auth';\r\n\r\nconst AppRouter = () => {\r\n  const { Content } = Layout;\r\n  const { auth } = useSelector(selectAuth);\r\n  let history = useHistory();\r\n  const [isInAuth] = useIsInAuth();\r\n\r\n  useEffect(() => {\r\n    console.log(history);\r\n    if (!auth.isLoggedIn && history.location.pathname.split('/')[1] !== 'auth') {\r\n      history.push('/auth/login');\r\n    }\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <Layout style={{ height: '100vh' }}>\r\n      {!isInAuth && <NavHeader />}\r\n      <Layout>\r\n        {!isInAuth && <NavSider />}\r\n        <Layout>\r\n          <Content className=\"site-layout-background\">\r\n            <Switch>\r\n              <Route path=\"/auth/login\">\r\n                <Login />\r\n              </Route>\r\n              <Route path=\"/auth/register\">\r\n                <Register />\r\n              </Route>\r\n              <Route path=\"/\" exact>\r\n                <Dashboard />\r\n              </Route>\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction getOnlineStatus() {\r\n  return typeof navigator !== 'undefined' && true ? navigator.onLine : true;\r\n}\r\n\r\nfunction useOnlineStatus() {\r\n  const [onlineStatus, setOnlineStatus] = useState(getOnlineStatus());\r\n\r\n  const goOnline = () => setOnlineStatus(true);\r\n\r\n  const goOffline = () => setOnlineStatus(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('online', goOnline);\r\n    window.addEventListener('offline', goOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', goOnline);\r\n      window.removeEventListener('offline', goOffline);\r\n    };\r\n  }, []);\r\n\r\n  return onlineStatus;\r\n}\r\n\r\nexport default useOnlineStatus;\r\n","import React, { useEffect } from 'react';\r\nimport './styles/global.scss';\r\nimport './styles/bootstrap-utilities.css';\r\nimport AppRouter from './components/routing/app-router';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport useOnlineStatus from './hooks/use-is-online';\r\n\r\nconst App = () => {\r\n  let isOnline = useOnlineStatus();\r\n\r\n  useEffect(() => {\r\n    // console.log(isOnline);\r\n  }, [isOnline]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <AppRouter />\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './authSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n    },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nconst client = new ApolloClient({\r\n  uri: 'http://192.99.154.194:4000/'\r\n});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ApolloProvider client={client}>\r\n      <App />\r\n    </ApolloProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}